/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>



#define HOST_OS 2
#include "../zmk-nodefree-config/helper.h"

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define BLUETOOTH 4

&lt {
  tapping-term-ms = <200>;
};

&mt {
  tapping-term-ms = <200>;
};

ZMK_UNICODE_SINGLE(combining_acute, N0, N3, N0, N1) // N0, N3, N0, N1 = U+0301
ZMK_UNICODE_SINGLE(combining_grave, N0, N3, N0, N0) // N0, N3, N0, N0 = U+0300
ZMK_UNICODE_SINGLE(combining_macron, N0, N3, N0, N4) // N0, N3, N0, N4 = U+0304
ZMK_UNICODE_SINGLE(combining_circumflex, N0, N3, N0, N6) // N0, N3, N0, N6 = U+0302
ZMK_UNICODE_SINGLE(combining_tilde, N0, N3, N0, N7) // N0, N3, N0, N7 = U+0303
ZMK_UNICODE_SINGLE(combining_diaeresis, N0, N3, N0, N8) // N0, N3, N0, N8 = U+0308

ZMK_BEHAVIOR(space_tab_lower_tapdance, tap_dance,
  tapping-term-ms = <200>;
  bindings = <&lt LOWER SPACE>, <&kp TAB>;
)

ZMK_LAYER(default_layer,
  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &mo BLUETOOTH
  &none  &mt &combining_tilde Q  &mt &combining_grave W  &mt &combining_acute E  &mt &combining_diaeresis R  &mt &combining_macron T  &mt &combining_macron Y  &mt &combining_diaeresis U  &mt &combining_acute I  &mt &combining_grave O  &mt &combining_tilde P  &none
  &none  &mt LCTRL A  &mt LALT S  &mt LGUI D  &mt LSHIFT F  &mt GLOBE  G  &mt GLOBE H  &mt RSHIFT J  &mt RGUI K  &mt RALT L  &mt RCTRL SEMI &none
  &none  &kp Z  &kp X  &kp C  &kp V  &kp B  &kp C_MUTE  &kp C_PP  &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &none
  &mkp LCLK  &kp LEFT  &kp RIGHT  &kp DEL  &lt RAISE RETURN &space_tab_lower_tapdance &kp BSPC  &kp UP  &kp DOWN  &mkp RCLK  ,
  &inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_NEXT C_PREV
)

ZMK_LAYER(lower_layer,
  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
  &none  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &none
  &none  &mt LCTRL GRAVE  &mt LALT SQT  &mt LGUI LS(N9)  &mt LSHIFT LBRC  &mt GLOBE LBKT  &mt GLOBE RBKT  &mt RSHIFT RBRC  &mt RGUI LS(N0)  &mt RALT LS(SQT) &mt RCTRL LS(GRAVE)  &none
  &none  &kp LS(N1) &kp LS(N2) &kp LS(N3) &kp LS(N4) &kp LS(N5) &kp C_MUTE  &kp C_PP  &kp LS(N6) &kp LS(N7) &kp LS(N8) &kp LS(N9) &kp LS(N0) &none
  &mkp LCLK  &kp LEFT  &kp RIGHT  &kp DEL  &lt RAISE RETURN &space_tab_lower_tapdance &kp BSPC  &kp UP  &kp DOWN  &mkp RCLK  ,
  &inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_NEXT C_PREV
)


ZMK_LAYER(upper_layer,
  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
  &none  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &none
  &none  &mt LCTRL A  &mt LALT S  &mt LGUI BSLH  &mt LSHIFT PLUS  &mt GLOBE  G  &mt GLOBE H  &mt RSHIFT EQUAL  &mt RGUI LS(BSLH)  &mt RALT L  &mt RCTRL SEMI &none
  &none  &none  &none  &none  &none  &none  &kp C_MUTE  &kp C_PP  &none  &none  &none  &none  &none  &none  
  &mkp LCLK  &kp LEFT  &kp RIGHT  &kp DEL  &lt RAISE RETURN &space_tab_lower_tapdance &kp BSPC  &kp UP  &kp DOWN  &mkp RCLK  ,
  &inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_NEXT C_PREV
)

ZMK_LAYER(adjust_layer,
  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
  &none  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15  &kp F16  &kp F17  &kp F18  &kp F19  &kp F20  &none
  &none  &mt LCTRL A  &mt LALT S  &mt LGUI D  &mt LSHIFT F  &mt GLOBE  G  &mt GLOBE H  &mt RSHIFT J  &mt RGUI K  &mt RALT L  &mt RCTRL SEMI &none
  &none  &none  &none  &none  &none  &none  &kp C_MUTE  &kp C_PP   &none  &none  &none  &none  &none  &none
  &kp LCLK  &kp LEFT  &kp RIGHT  &kp DEL  &lt RAISE RETURN &space_tab_lower_tapdance &kp BSPC  &kp UP  &kp DOWN  &kp RCLK  ,
  &inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_NEXT C_PREV
)

ZMK_LAYER(bluetooth_layer,
    &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
    &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
    &none  &bt BT_CLR  &bt BT_CLR_ALL  &bt BT_NXT  &bt BT_PRV  &none  &none  &none  &none  &none  &none
    &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
    &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none 
)

ZMK_CONDITIONAL_LAYER(1 2, 3)